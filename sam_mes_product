
--=======================================================
--  Entity decleration
--=======================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity sam_mes is
port (
		clk : in  STD_LOGIC;
		reset : in  STD_LOGIC;
		bit_in : in std_logic;
		en_in : in std_logic;
		mes : out STD_LOGIC_VECTOR (255 downto 0);
		en_sig : out std_logic
		
);
end entity;

--=======================================================
-- Architecture declaration
--=======================================================

architecture sam_mes_arch of sam_mes is

signal numcount : std_logic_vector(7 downto 0);
signal count : std_logic_vector(7 downto 0):="00000000";
signal reg : STD_LOGIC_VECTOR (255 downto 0);


begin

process(clk)
			
			begin 
			
			if (rising_edge(clk)) then
				if(en_in = '1')then
				numcount <= "00000000";
				en_sig <= '0';
			
				elsif (numcount < 255) then
				
				reg<=bit_in & reg(255 downto 1);
				
				numcount <= numcount+1;
				en_sig <= '0';
				
				elsif (numcount = 255) then
				
				mes  <= bit_in & reg(255 downto 1);
				reg  <= bit_in & reg(255 downto 1);
				
				numcount <= numcount+1;
				count <= count+1;
					if count = "00000000" then
					en_sig <= '1';
					elsif count=255 then
					count <= "00000000";
					end if;
				
				elsif (numcount > 255) then
				
				numcount <= "00000000";
				en_sig <= '0';
				else 
				numcount <= "00000000";
				en_sig <= '0';
				end if;
			
			end if;
			
end process;


end architecture;
