

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity noise is
    Port (
		en_in : in std_logic;
      CLK     	   : in  std_logic;
      dat_in 		: in std_logic_vector(255 downto 0);
		dat_out 		: out std_logic_vector(255 downto 0);
		en_out : out std_logic
       
    );
end noise;

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity noiserom is
port  ( num : in std_logic_vector(3 downto 0);
		data_out : out std_logic_vector(255 downto 0));
end entity;


architecture noise_arch of noise is

signal num_count : std_logic_vector (3 downto 0) := "0000";
signal count : std_logic_vector(16 downto 0) := "00000000000000000";
signal noise_temp : std_logic_vector (255 downto 0);

component noiserom 
port  ( num : in std_logic_vector(3 downto 0);
		data_out : out std_logic_vector(255 downto 0));
end component;

begin 
	
	noise1 : noiserom port map(num => num_count, data_out => noise_temp);


	process(CLK)
		 
		 begin
		 
		 if(rising_edge(CLK)) then
			en_out <= en_in;
			count <= count+1;
		
				 
				 if en_in = '1' then
				 	
					count <= "00000000000000000";
					num_count <= "0000";
				
				 end if;
					
				 
				if (count < 10) then
						 
							if (num_count < 9) then
							
								num_count <= num_count+1;
							
							elsif num_count = 9 then
							
							 num_count <= "0000";
							
							end if; 
						
						
						dat_out <= dat_in(255 downto 0) xor noise_temp;
					
					
					else
				
					dat_out <= dat_in(255 downto 0);
			 
					end if;
				
		end if;
		 
	end process;
	
end architecture;





architecture noiserom_arch of noiserom is
    type ROM_type is array (0 to 9) of std_logic_vector(255 downto 0);

    constant ROM : ROM_type := (
         0 =>  "0000111000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			1 =>  "0000100010000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		   2 =>  "0000100100100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",	       
         3 =>  "0000000001000100001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
         4 =>  "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			5 =>  "0000010001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			6 =>  "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			7 =>  "0000000000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			8 =>  "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
         9 =>  "0000000000000001011000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

	);
begin
    data_out <= ROM(to_integer(unsigned(num)));
end architecture;
